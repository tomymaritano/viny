// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./nototo.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  avatar    String?
  
  // Auth & Security
  emailVerified DateTime? @map("email_verified")
  refreshToken  String?   @map("refresh_token")
  
  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lastLogin DateTime? @map("last_login")
  
  // Relations
  notes     Note[]
  tags      Tag[]
  notebooks Notebook[]

  @@map("users")
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  preview   String?
  notebook  String   @default("Personal")
  status    String   @default("draft")
  isPinned  Boolean  @default(false) @map("is_pinned")
  isTrashed Boolean  @default(false) @map("is_trashed")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  trashedAt DateTime? @map("trashed_at")

  // User relation (optional during migration)
  userId Int? @map("user_id")
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  tags NoteTags[]

  @@map("notes")
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  color String @default("#268bd2")

  // User relation (optional during migration)
  userId Int? @map("user_id")
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Relations
  notes NoteTags[]

  // Unique constraint per user (temporarily allow null userId)
  @@unique([name, userId])
  @@map("tags")
}

model NoteTags {
  noteId Int @map("note_id")
  tagId  Int @map("tag_id")

  // Relations
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([noteId, tagId])
  @@map("note_tags")
}

model Notebook {
  id        Int      @id @default(autoincrement())
  name      String
  color     String   @default("#268bd2")
  createdAt DateTime @default(now()) @map("created_at")

  // User relation (optional during migration)
  userId Int? @map("user_id")
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Unique constraint per user (temporarily allow null userId)
  @@unique([name, userId])
  @@map("notebooks")
}